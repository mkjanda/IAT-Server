//
// This file was generated by the Eclipse Implementation of JAXB, v3.0.2 
// See https://eclipse-ee4j.github.io/jaxb-ri 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.07.28 at 02:14:21 PM EDT 
//


package net.iatsoftware.iat.generated;

import jakarta.xml.bind.annotation.XmlEnum;
import jakarta.xml.bind.annotation.XmlEnumValue;
import jakarta.xml.bind.annotation.XmlType;


/**
 * <p>Java class for CodeType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <pre>
 * &lt;simpleType name="CodeType"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="Constructor"/&gt;
 *     &lt;enumeration value="Declaration"/&gt;
 *     &lt;enumeration value="Code"/&gt;
 *     &lt;enumeration value="GlobalDeclaration"/&gt;
 *     &lt;enumeration value="GlobalCode"/&gt;
 *     &lt;enumeration value="TOC"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "CodeType")
@XmlEnum
public enum CodeType {

    @XmlEnumValue("Constructor")
    CONSTRUCTOR("Constructor"),
    @XmlEnumValue("Declaration")
    DECLARATION("Declaration"),
    @XmlEnumValue("Code")
    CODE("Code"),
    @XmlEnumValue("GlobalDeclaration")
    GLOBAL_DECLARATION("GlobalDeclaration"),
    @XmlEnumValue("GlobalCode")
    GLOBAL_CODE("GlobalCode"),
    TOC("TOC");
    private final String value;

    CodeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static CodeType fromValue(String v) {
        for (CodeType c: CodeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
