//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.3.2 
// See <a href="https://javaee.github.io/jaxb-v2/">https://javaee.github.io/jaxb-v2/</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2023.05.13 at 08:23:51 AM EDT 
//


package net.iatsoftware.iat.generated;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for DeploymentStage.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="DeploymentStage"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string"&gt;
 *     &lt;enumeration value="unset"/&gt;
 *     &lt;enumeration value="compilingXSLT"/&gt;
 *     &lt;enumeration value="processingFileManifest"/&gt;
 *     &lt;enumeration value="creatingBackup"/&gt;
 *     &lt;enumeration value="restoringBackup"/&gt;
 *     &lt;enumeration value="initializingDeployment"/&gt;
 *     &lt;enumeration value="finalizingDeployment"/&gt;
 *     &lt;enumeration value="generatingIAT"/&gt;
 *     &lt;enumeration value="generatingSurvey"/&gt;
 *     &lt;enumeration value="processingUniqueSurveyResponses"/&gt;
 *     &lt;enumeration value="recordingProcessedJS"/&gt;
 *     &lt;enumeration value="processingScript"/&gt;
 *     &lt;enumeration value="generatingAES"/&gt;
 *     &lt;enumeration value="timerExpired"/&gt;
 *     &lt;enumeration value="unchanged"/&gt;
 *     &lt;enumeration value="terminated"/&gt;
 *     &lt;enumeration value="cannotBackup"/&gt;
 *     &lt;enumeration value="aborted"/&gt;
 *     &lt;enumeration value="cleaningUp"/&gt;
 *     &lt;enumeration value="cleanupComplete"/&gt;
 *     &lt;enumeration value="cleanupFailed"/&gt;
 *     &lt;enumeration value="cannotRestoreBackup"/&gt;
 *     &lt;enumeration value="backupRestored"/&gt;
 *     &lt;enumeration value="destroyingBackup"/&gt;
 *     &lt;enumeration value="comparingDescriptors"/&gt;
 *     &lt;enumeration value="xsltFailure"/&gt;
 *     &lt;enumeration value="failAndTerminate"/&gt;
 *     &lt;enumeration value="mismatchedDeploymentDescriptors"/&gt;
 *     &lt;enumeration value="success"/&gt;
 *     &lt;enumeration value="failed"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "DeploymentStage")
@XmlEnum
public enum DeploymentStage {

    @XmlEnumValue("unset")
    UNSET("unset"),
    @XmlEnumValue("compilingXSLT")
    COMPILING_XSLT("compilingXSLT"),
    @XmlEnumValue("processingFileManifest")
    PROCESSING_FILE_MANIFEST("processingFileManifest"),
    @XmlEnumValue("creatingBackup")
    CREATING_BACKUP("creatingBackup"),
    @XmlEnumValue("restoringBackup")
    RESTORING_BACKUP("restoringBackup"),
    @XmlEnumValue("initializingDeployment")
    INITIALIZING_DEPLOYMENT("initializingDeployment"),
    @XmlEnumValue("finalizingDeployment")
    FINALIZING_DEPLOYMENT("finalizingDeployment"),
    @XmlEnumValue("generatingIAT")
    GENERATING_IAT("generatingIAT"),
    @XmlEnumValue("generatingSurvey")
    GENERATING_SURVEY("generatingSurvey"),
    @XmlEnumValue("processingUniqueSurveyResponses")
    PROCESSING_UNIQUE_SURVEY_RESPONSES("processingUniqueSurveyResponses"),
    @XmlEnumValue("recordingProcessedJS")
    RECORDING_PROCESSED_JS("recordingProcessedJS"),
    @XmlEnumValue("processingScript")
    PROCESSING_SCRIPT("processingScript"),
    @XmlEnumValue("generatingAES")
    GENERATING_AES("generatingAES"),
    @XmlEnumValue("timerExpired")
    TIMER_EXPIRED("timerExpired"),
    @XmlEnumValue("unchanged")
    UNCHANGED("unchanged"),
    @XmlEnumValue("terminated")
    TERMINATED("terminated"),
    @XmlEnumValue("cannotBackup")
    CANNOT_BACKUP("cannotBackup"),
    @XmlEnumValue("aborted")
    ABORTED("aborted"),
    @XmlEnumValue("cleaningUp")
    CLEANING_UP("cleaningUp"),
    @XmlEnumValue("cleanupComplete")
    CLEANUP_COMPLETE("cleanupComplete"),
    @XmlEnumValue("cleanupFailed")
    CLEANUP_FAILED("cleanupFailed"),
    @XmlEnumValue("cannotRestoreBackup")
    CANNOT_RESTORE_BACKUP("cannotRestoreBackup"),
    @XmlEnumValue("backupRestored")
    BACKUP_RESTORED("backupRestored"),
    @XmlEnumValue("destroyingBackup")
    DESTROYING_BACKUP("destroyingBackup"),
    @XmlEnumValue("comparingDescriptors")
    COMPARING_DESCRIPTORS("comparingDescriptors"),
    @XmlEnumValue("xsltFailure")
    XSLT_FAILURE("xsltFailure"),
    @XmlEnumValue("failAndTerminate")
    FAIL_AND_TERMINATE("failAndTerminate"),
    @XmlEnumValue("mismatchedDeploymentDescriptors")
    MISMATCHED_DEPLOYMENT_DESCRIPTORS("mismatchedDeploymentDescriptors"),
    @XmlEnumValue("success")
    SUCCESS("success"),
    @XmlEnumValue("failed")
    FAILED("failed");
    private final String value;

    DeploymentStage(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static DeploymentStage fromValue(String v) {
        for (DeploymentStage c: DeploymentStage.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
